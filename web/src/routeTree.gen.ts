/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TripsImport } from './routes/trips'
import { Route as SettingsImport } from './routes/settings'
import { Route as IndexImport } from './routes/index'
import { Route as TripsIndexImport } from './routes/trips/index'
import { Route as TermsIndexImport } from './routes/terms/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as SearchIndexImport } from './routes/search/index'
import { Route as ReportIndexImport } from './routes/report/index'
import { Route as PrivacyIndexImport } from './routes/privacy/index'
import { Route as NotificationsIndexImport } from './routes/notifications/index'
import { Route as NearbyIndexImport } from './routes/nearby/index'
import { Route as ListsIndexImport } from './routes/lists/index'
import { Route as HelpIndexImport } from './routes/help/index'
import { Route as DiaryIndexImport } from './routes/diary/index'
import { Route as CategoriesIndexImport } from './routes/categories/index'
import { Route as BookmarksIndexImport } from './routes/bookmarks/index'
import { Route as UUsernameImport } from './routes/u/$username'
import { Route as AdminDashboardImport } from './routes/_admin/dashboard'
import { Route as UUsernameIndexImport } from './routes/u/$username/index'
import { Route as TripsPlannerIndexImport } from './routes/trips/planner/index'
import { Route as TripsMyTripsIndexImport } from './routes/trips/my-trips/index'
import { Route as TripsInvitesIndexImport } from './routes/trips/invites/index'
import { Route as TripsDiscoverIndexImport } from './routes/trips/discover/index'
import { Route as TripsIdIndexImport } from './routes/trips/$id/index'
import { Route as SettingsProfileIndexImport } from './routes/settings/profile/index'
import { Route as SettingsAccountIndexImport } from './routes/settings/account/index'
import { Route as PIdIndexImport } from './routes/p/$id/index'
import { Route as ListsIdIndexImport } from './routes/lists/$id/index'
import { Route as DiscoverEventsIndexImport } from './routes/discover/events/index'
import { Route as CitiesListIndexImport } from './routes/cities/list/index'
import { Route as CitiesSplatIndexImport } from './routes/cities/$/index'
import { Route as AuthVerifyEmailIndexImport } from './routes/_auth/verify-email/index'
import { Route as AuthSignUpIndexImport } from './routes/_auth/sign-up/index'
import { Route as AuthSignInIndexImport } from './routes/_auth/sign-in/index'
import { Route as AuthOnboardingIndexImport } from './routes/_auth/onboarding/index'
import { Route as AuthForgotPasswordIndexImport } from './routes/_auth/forgot-password/index'
import { Route as AdminDashboardIndexImport } from './routes/_admin/dashboard/index'
import { Route as UUsernameReviewsIndexImport } from './routes/u/$username/reviews/index'
import { Route as UUsernameListsIndexImport } from './routes/u/$username/lists/index'
import { Route as UUsernameFollowingIndexImport } from './routes/u/$username/following/index'
import { Route as UUsernameFollowersIndexImport } from './routes/u/$username/followers/index'
import { Route as UUsernameFavoritesIndexImport } from './routes/u/$username/favorites/index'
import { Route as UUsernameActivitiesIndexImport } from './routes/u/$username/activities/index'
import { Route as ListsIdItemsIndexImport } from './routes/lists/$id/items/index'
import { Route as ListsIdEditIndexImport } from './routes/lists/$id/edit/index'
import { Route as AuthForgotPasswordResetIndexImport } from './routes/_auth/forgot-password/reset/index'
import { Route as AdminDashboardUsersIndexImport } from './routes/_admin/dashboard/users/index'
import { Route as AdminDashboardPoisIndexImport } from './routes/_admin/dashboard/pois/index'
import { Route as AdminDashboardCitiesIndexImport } from './routes/_admin/dashboard/cities/index'
import { Route as AdminDashboardCategoriesIndexImport } from './routes/_admin/dashboard/categories/index'
import { Route as AdminDashboardAmenitiesIndexImport } from './routes/_admin/dashboard/amenities/index'
import { Route as AdminDashboardUsersVerifyIndexImport } from './routes/_admin/dashboard/users/verify/index'
import { Route as AdminDashboardPoisIdIndexImport } from './routes/_admin/dashboard/pois/$id/index'
import { Route as AdminDashboardCitiesNewIndexImport } from './routes/_admin/dashboard/cities/new/index'
import { Route as AdminDashboardCitiesIdIndexImport } from './routes/_admin/dashboard/cities/$id/index'
import { Route as AdminDashboardCategoriesNewIndexImport } from './routes/_admin/dashboard/categories/new/index'
import { Route as AdminDashboardCategoriesIdIndexImport } from './routes/_admin/dashboard/categories/$id/index'
import { Route as AdminDashboardAmenitiesNewIndexImport } from './routes/_admin/dashboard/amenities/new/index'
import { Route as AdminDashboardAmenitiesIdIndexImport } from './routes/_admin/dashboard/amenities/$id/index'
import { Route as AdminDashboardPoisIdEditIndexImport } from './routes/_admin/dashboard/pois/$id/edit/index'
import { Route as AdminDashboardCitiesIdEditIndexImport } from './routes/_admin/dashboard/cities/$id/edit/index'
import { Route as AdminDashboardCategoriesIdEditIndexImport } from './routes/_admin/dashboard/categories/$id/edit/index'
import { Route as AdminDashboardAmenitiesIdEditIndexImport } from './routes/_admin/dashboard/amenities/$id/edit/index'

// Create/Update Routes

const TripsRoute = TripsImport.update({
  id: '/trips',
  path: '/trips',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TripsIndexRoute = TripsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TripsRoute,
} as any)

const TermsIndexRoute = TermsIndexImport.update({
  id: '/terms/',
  path: '/terms/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SettingsRoute,
} as any)

const SearchIndexRoute = SearchIndexImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => rootRoute,
} as any)

const ReportIndexRoute = ReportIndexImport.update({
  id: '/report/',
  path: '/report/',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyIndexRoute = PrivacyIndexImport.update({
  id: '/privacy/',
  path: '/privacy/',
  getParentRoute: () => rootRoute,
} as any)

const NotificationsIndexRoute = NotificationsIndexImport.update({
  id: '/notifications/',
  path: '/notifications/',
  getParentRoute: () => rootRoute,
} as any)

const NearbyIndexRoute = NearbyIndexImport.update({
  id: '/nearby/',
  path: '/nearby/',
  getParentRoute: () => rootRoute,
} as any)

const ListsIndexRoute = ListsIndexImport.update({
  id: '/lists/',
  path: '/lists/',
  getParentRoute: () => rootRoute,
} as any)

const HelpIndexRoute = HelpIndexImport.update({
  id: '/help/',
  path: '/help/',
  getParentRoute: () => rootRoute,
} as any)

const DiaryIndexRoute = DiaryIndexImport.update({
  id: '/diary/',
  path: '/diary/',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesIndexRoute = CategoriesIndexImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => rootRoute,
} as any)

const BookmarksIndexRoute = BookmarksIndexImport.update({
  id: '/bookmarks/',
  path: '/bookmarks/',
  getParentRoute: () => rootRoute,
} as any)

const UUsernameRoute = UUsernameImport.update({
  id: '/u/$username',
  path: '/u/$username',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/_admin/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const UUsernameIndexRoute = UUsernameIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UUsernameRoute,
} as any)

const TripsPlannerIndexRoute = TripsPlannerIndexImport.update({
  id: '/planner/',
  path: '/planner/',
  getParentRoute: () => TripsRoute,
} as any)

const TripsMyTripsIndexRoute = TripsMyTripsIndexImport.update({
  id: '/my-trips/',
  path: '/my-trips/',
  getParentRoute: () => TripsRoute,
} as any)

const TripsInvitesIndexRoute = TripsInvitesIndexImport.update({
  id: '/invites/',
  path: '/invites/',
  getParentRoute: () => TripsRoute,
} as any)

const TripsDiscoverIndexRoute = TripsDiscoverIndexImport.update({
  id: '/discover/',
  path: '/discover/',
  getParentRoute: () => TripsRoute,
} as any)

const TripsIdIndexRoute = TripsIdIndexImport.update({
  id: '/$id/',
  path: '/$id/',
  getParentRoute: () => TripsRoute,
} as any)

const SettingsProfileIndexRoute = SettingsProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsAccountIndexRoute = SettingsAccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => SettingsRoute,
} as any)

const PIdIndexRoute = PIdIndexImport.update({
  id: '/p/$id/',
  path: '/p/$id/',
  getParentRoute: () => rootRoute,
} as any)

const ListsIdIndexRoute = ListsIdIndexImport.update({
  id: '/lists/$id/',
  path: '/lists/$id/',
  getParentRoute: () => rootRoute,
} as any)

const DiscoverEventsIndexRoute = DiscoverEventsIndexImport.update({
  id: '/discover/events/',
  path: '/discover/events/',
  getParentRoute: () => rootRoute,
} as any)

const CitiesListIndexRoute = CitiesListIndexImport.update({
  id: '/cities/list/',
  path: '/cities/list/',
  getParentRoute: () => rootRoute,
} as any)

const CitiesSplatIndexRoute = CitiesSplatIndexImport.update({
  id: '/cities/$/',
  path: '/cities/$/',
  getParentRoute: () => rootRoute,
} as any)

const AuthVerifyEmailIndexRoute = AuthVerifyEmailIndexImport.update({
  id: '/_auth/verify-email/',
  path: '/verify-email/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpIndexRoute = AuthSignUpIndexImport.update({
  id: '/_auth/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInIndexRoute = AuthSignInIndexImport.update({
  id: '/_auth/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => rootRoute,
} as any)

const AuthOnboardingIndexRoute = AuthOnboardingIndexImport.update({
  id: '/_auth/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexImport.update({
  id: '/_auth/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardIndexRoute = AdminDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminDashboardRoute,
} as any)

const UUsernameReviewsIndexRoute = UUsernameReviewsIndexImport.update({
  id: '/reviews/',
  path: '/reviews/',
  getParentRoute: () => UUsernameRoute,
} as any)

const UUsernameListsIndexRoute = UUsernameListsIndexImport.update({
  id: '/lists/',
  path: '/lists/',
  getParentRoute: () => UUsernameRoute,
} as any)

const UUsernameFollowingIndexRoute = UUsernameFollowingIndexImport.update({
  id: '/following/',
  path: '/following/',
  getParentRoute: () => UUsernameRoute,
} as any)

const UUsernameFollowersIndexRoute = UUsernameFollowersIndexImport.update({
  id: '/followers/',
  path: '/followers/',
  getParentRoute: () => UUsernameRoute,
} as any)

const UUsernameFavoritesIndexRoute = UUsernameFavoritesIndexImport.update({
  id: '/favorites/',
  path: '/favorites/',
  getParentRoute: () => UUsernameRoute,
} as any)

const UUsernameActivitiesIndexRoute = UUsernameActivitiesIndexImport.update({
  id: '/activities/',
  path: '/activities/',
  getParentRoute: () => UUsernameRoute,
} as any)

const ListsIdItemsIndexRoute = ListsIdItemsIndexImport.update({
  id: '/lists/$id/items/',
  path: '/lists/$id/items/',
  getParentRoute: () => rootRoute,
} as any)

const ListsIdEditIndexRoute = ListsIdEditIndexImport.update({
  id: '/lists/$id/edit/',
  path: '/lists/$id/edit/',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordResetIndexRoute =
  AuthForgotPasswordResetIndexImport.update({
    id: '/_auth/forgot-password/reset/',
    path: '/forgot-password/reset/',
    getParentRoute: () => rootRoute,
  } as any)

const AdminDashboardUsersIndexRoute = AdminDashboardUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminDashboardRoute,
} as any)

const AdminDashboardPoisIndexRoute = AdminDashboardPoisIndexImport.update({
  id: '/pois/',
  path: '/pois/',
  getParentRoute: () => AdminDashboardRoute,
} as any)

const AdminDashboardCitiesIndexRoute = AdminDashboardCitiesIndexImport.update({
  id: '/cities/',
  path: '/cities/',
  getParentRoute: () => AdminDashboardRoute,
} as any)

const AdminDashboardCategoriesIndexRoute =
  AdminDashboardCategoriesIndexImport.update({
    id: '/categories/',
    path: '/categories/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardAmenitiesIndexRoute =
  AdminDashboardAmenitiesIndexImport.update({
    id: '/amenities/',
    path: '/amenities/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardUsersVerifyIndexRoute =
  AdminDashboardUsersVerifyIndexImport.update({
    id: '/users/verify/',
    path: '/users/verify/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardPoisIdIndexRoute = AdminDashboardPoisIdIndexImport.update({
  id: '/pois/$id/',
  path: '/pois/$id/',
  getParentRoute: () => AdminDashboardRoute,
} as any)

const AdminDashboardCitiesNewIndexRoute =
  AdminDashboardCitiesNewIndexImport.update({
    id: '/cities/new/',
    path: '/cities/new/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardCitiesIdIndexRoute =
  AdminDashboardCitiesIdIndexImport.update({
    id: '/cities/$id/',
    path: '/cities/$id/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardCategoriesNewIndexRoute =
  AdminDashboardCategoriesNewIndexImport.update({
    id: '/categories/new/',
    path: '/categories/new/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardCategoriesIdIndexRoute =
  AdminDashboardCategoriesIdIndexImport.update({
    id: '/categories/$id/',
    path: '/categories/$id/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardAmenitiesNewIndexRoute =
  AdminDashboardAmenitiesNewIndexImport.update({
    id: '/amenities/new/',
    path: '/amenities/new/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardAmenitiesIdIndexRoute =
  AdminDashboardAmenitiesIdIndexImport.update({
    id: '/amenities/$id/',
    path: '/amenities/$id/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardPoisIdEditIndexRoute =
  AdminDashboardPoisIdEditIndexImport.update({
    id: '/pois/$id/edit/',
    path: '/pois/$id/edit/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardCitiesIdEditIndexRoute =
  AdminDashboardCitiesIdEditIndexImport.update({
    id: '/cities/$id/edit/',
    path: '/cities/$id/edit/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardCategoriesIdEditIndexRoute =
  AdminDashboardCategoriesIdEditIndexImport.update({
    id: '/categories/$id/edit/',
    path: '/categories/$id/edit/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

const AdminDashboardAmenitiesIdEditIndexRoute =
  AdminDashboardAmenitiesIdEditIndexImport.update({
    id: '/amenities/$id/edit/',
    path: '/amenities/$id/edit/',
    getParentRoute: () => AdminDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/trips': {
      id: '/trips'
      path: '/trips'
      fullPath: '/trips'
      preLoaderRoute: typeof TripsImport
      parentRoute: typeof rootRoute
    }
    '/_admin/dashboard': {
      id: '/_admin/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/u/$username': {
      id: '/u/$username'
      path: '/u/$username'
      fullPath: '/u/$username'
      preLoaderRoute: typeof UUsernameImport
      parentRoute: typeof rootRoute
    }
    '/bookmarks/': {
      id: '/bookmarks/'
      path: '/bookmarks'
      fullPath: '/bookmarks'
      preLoaderRoute: typeof BookmarksIndexImport
      parentRoute: typeof rootRoute
    }
    '/categories/': {
      id: '/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/diary/': {
      id: '/diary/'
      path: '/diary'
      fullPath: '/diary'
      preLoaderRoute: typeof DiaryIndexImport
      parentRoute: typeof rootRoute
    }
    '/help/': {
      id: '/help/'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof HelpIndexImport
      parentRoute: typeof rootRoute
    }
    '/lists/': {
      id: '/lists/'
      path: '/lists'
      fullPath: '/lists'
      preLoaderRoute: typeof ListsIndexImport
      parentRoute: typeof rootRoute
    }
    '/nearby/': {
      id: '/nearby/'
      path: '/nearby'
      fullPath: '/nearby'
      preLoaderRoute: typeof NearbyIndexImport
      parentRoute: typeof rootRoute
    }
    '/notifications/': {
      id: '/notifications/'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof NotificationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/privacy/': {
      id: '/privacy/'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyIndexImport
      parentRoute: typeof rootRoute
    }
    '/report/': {
      id: '/report/'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof ReportIndexImport
      parentRoute: typeof rootRoute
    }
    '/search/': {
      id: '/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof SettingsImport
    }
    '/terms/': {
      id: '/terms/'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsIndexImport
      parentRoute: typeof rootRoute
    }
    '/trips/': {
      id: '/trips/'
      path: '/'
      fullPath: '/trips/'
      preLoaderRoute: typeof TripsIndexImport
      parentRoute: typeof TripsImport
    }
    '/_admin/dashboard/': {
      id: '/_admin/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AdminDashboardIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_auth/forgot-password/': {
      id: '/_auth/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/onboarding/': {
      id: '/_auth/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof AuthOnboardingIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-in/': {
      id: '/_auth/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-up/': {
      id: '/_auth/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/verify-email/': {
      id: '/_auth/verify-email/'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailIndexImport
      parentRoute: typeof rootRoute
    }
    '/cities/$/': {
      id: '/cities/$/'
      path: '/cities/$'
      fullPath: '/cities/$'
      preLoaderRoute: typeof CitiesSplatIndexImport
      parentRoute: typeof rootRoute
    }
    '/cities/list/': {
      id: '/cities/list/'
      path: '/cities/list'
      fullPath: '/cities/list'
      preLoaderRoute: typeof CitiesListIndexImport
      parentRoute: typeof rootRoute
    }
    '/discover/events/': {
      id: '/discover/events/'
      path: '/discover/events'
      fullPath: '/discover/events'
      preLoaderRoute: typeof DiscoverEventsIndexImport
      parentRoute: typeof rootRoute
    }
    '/lists/$id/': {
      id: '/lists/$id/'
      path: '/lists/$id'
      fullPath: '/lists/$id'
      preLoaderRoute: typeof ListsIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/p/$id/': {
      id: '/p/$id/'
      path: '/p/$id'
      fullPath: '/p/$id'
      preLoaderRoute: typeof PIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/account/': {
      id: '/settings/account/'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof SettingsAccountIndexImport
      parentRoute: typeof SettingsImport
    }
    '/settings/profile/': {
      id: '/settings/profile/'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof SettingsProfileIndexImport
      parentRoute: typeof SettingsImport
    }
    '/trips/$id/': {
      id: '/trips/$id/'
      path: '/$id'
      fullPath: '/trips/$id'
      preLoaderRoute: typeof TripsIdIndexImport
      parentRoute: typeof TripsImport
    }
    '/trips/discover/': {
      id: '/trips/discover/'
      path: '/discover'
      fullPath: '/trips/discover'
      preLoaderRoute: typeof TripsDiscoverIndexImport
      parentRoute: typeof TripsImport
    }
    '/trips/invites/': {
      id: '/trips/invites/'
      path: '/invites'
      fullPath: '/trips/invites'
      preLoaderRoute: typeof TripsInvitesIndexImport
      parentRoute: typeof TripsImport
    }
    '/trips/my-trips/': {
      id: '/trips/my-trips/'
      path: '/my-trips'
      fullPath: '/trips/my-trips'
      preLoaderRoute: typeof TripsMyTripsIndexImport
      parentRoute: typeof TripsImport
    }
    '/trips/planner/': {
      id: '/trips/planner/'
      path: '/planner'
      fullPath: '/trips/planner'
      preLoaderRoute: typeof TripsPlannerIndexImport
      parentRoute: typeof TripsImport
    }
    '/u/$username/': {
      id: '/u/$username/'
      path: '/'
      fullPath: '/u/$username/'
      preLoaderRoute: typeof UUsernameIndexImport
      parentRoute: typeof UUsernameImport
    }
    '/_admin/dashboard/amenities/': {
      id: '/_admin/dashboard/amenities/'
      path: '/amenities'
      fullPath: '/dashboard/amenities'
      preLoaderRoute: typeof AdminDashboardAmenitiesIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/categories/': {
      id: '/_admin/dashboard/categories/'
      path: '/categories'
      fullPath: '/dashboard/categories'
      preLoaderRoute: typeof AdminDashboardCategoriesIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/cities/': {
      id: '/_admin/dashboard/cities/'
      path: '/cities'
      fullPath: '/dashboard/cities'
      preLoaderRoute: typeof AdminDashboardCitiesIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/pois/': {
      id: '/_admin/dashboard/pois/'
      path: '/pois'
      fullPath: '/dashboard/pois'
      preLoaderRoute: typeof AdminDashboardPoisIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/users/': {
      id: '/_admin/dashboard/users/'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof AdminDashboardUsersIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_auth/forgot-password/reset/': {
      id: '/_auth/forgot-password/reset/'
      path: '/forgot-password/reset'
      fullPath: '/forgot-password/reset'
      preLoaderRoute: typeof AuthForgotPasswordResetIndexImport
      parentRoute: typeof rootRoute
    }
    '/lists/$id/edit/': {
      id: '/lists/$id/edit/'
      path: '/lists/$id/edit'
      fullPath: '/lists/$id/edit'
      preLoaderRoute: typeof ListsIdEditIndexImport
      parentRoute: typeof rootRoute
    }
    '/lists/$id/items/': {
      id: '/lists/$id/items/'
      path: '/lists/$id/items'
      fullPath: '/lists/$id/items'
      preLoaderRoute: typeof ListsIdItemsIndexImport
      parentRoute: typeof rootRoute
    }
    '/u/$username/activities/': {
      id: '/u/$username/activities/'
      path: '/activities'
      fullPath: '/u/$username/activities'
      preLoaderRoute: typeof UUsernameActivitiesIndexImport
      parentRoute: typeof UUsernameImport
    }
    '/u/$username/favorites/': {
      id: '/u/$username/favorites/'
      path: '/favorites'
      fullPath: '/u/$username/favorites'
      preLoaderRoute: typeof UUsernameFavoritesIndexImport
      parentRoute: typeof UUsernameImport
    }
    '/u/$username/followers/': {
      id: '/u/$username/followers/'
      path: '/followers'
      fullPath: '/u/$username/followers'
      preLoaderRoute: typeof UUsernameFollowersIndexImport
      parentRoute: typeof UUsernameImport
    }
    '/u/$username/following/': {
      id: '/u/$username/following/'
      path: '/following'
      fullPath: '/u/$username/following'
      preLoaderRoute: typeof UUsernameFollowingIndexImport
      parentRoute: typeof UUsernameImport
    }
    '/u/$username/lists/': {
      id: '/u/$username/lists/'
      path: '/lists'
      fullPath: '/u/$username/lists'
      preLoaderRoute: typeof UUsernameListsIndexImport
      parentRoute: typeof UUsernameImport
    }
    '/u/$username/reviews/': {
      id: '/u/$username/reviews/'
      path: '/reviews'
      fullPath: '/u/$username/reviews'
      preLoaderRoute: typeof UUsernameReviewsIndexImport
      parentRoute: typeof UUsernameImport
    }
    '/_admin/dashboard/amenities/$id/': {
      id: '/_admin/dashboard/amenities/$id/'
      path: '/amenities/$id'
      fullPath: '/dashboard/amenities/$id'
      preLoaderRoute: typeof AdminDashboardAmenitiesIdIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/amenities/new/': {
      id: '/_admin/dashboard/amenities/new/'
      path: '/amenities/new'
      fullPath: '/dashboard/amenities/new'
      preLoaderRoute: typeof AdminDashboardAmenitiesNewIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/categories/$id/': {
      id: '/_admin/dashboard/categories/$id/'
      path: '/categories/$id'
      fullPath: '/dashboard/categories/$id'
      preLoaderRoute: typeof AdminDashboardCategoriesIdIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/categories/new/': {
      id: '/_admin/dashboard/categories/new/'
      path: '/categories/new'
      fullPath: '/dashboard/categories/new'
      preLoaderRoute: typeof AdminDashboardCategoriesNewIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/cities/$id/': {
      id: '/_admin/dashboard/cities/$id/'
      path: '/cities/$id'
      fullPath: '/dashboard/cities/$id'
      preLoaderRoute: typeof AdminDashboardCitiesIdIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/cities/new/': {
      id: '/_admin/dashboard/cities/new/'
      path: '/cities/new'
      fullPath: '/dashboard/cities/new'
      preLoaderRoute: typeof AdminDashboardCitiesNewIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/pois/$id/': {
      id: '/_admin/dashboard/pois/$id/'
      path: '/pois/$id'
      fullPath: '/dashboard/pois/$id'
      preLoaderRoute: typeof AdminDashboardPoisIdIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/users/verify/': {
      id: '/_admin/dashboard/users/verify/'
      path: '/users/verify'
      fullPath: '/dashboard/users/verify'
      preLoaderRoute: typeof AdminDashboardUsersVerifyIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/amenities/$id/edit/': {
      id: '/_admin/dashboard/amenities/$id/edit/'
      path: '/amenities/$id/edit'
      fullPath: '/dashboard/amenities/$id/edit'
      preLoaderRoute: typeof AdminDashboardAmenitiesIdEditIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/categories/$id/edit/': {
      id: '/_admin/dashboard/categories/$id/edit/'
      path: '/categories/$id/edit'
      fullPath: '/dashboard/categories/$id/edit'
      preLoaderRoute: typeof AdminDashboardCategoriesIdEditIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/cities/$id/edit/': {
      id: '/_admin/dashboard/cities/$id/edit/'
      path: '/cities/$id/edit'
      fullPath: '/dashboard/cities/$id/edit'
      preLoaderRoute: typeof AdminDashboardCitiesIdEditIndexImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/dashboard/pois/$id/edit/': {
      id: '/_admin/dashboard/pois/$id/edit/'
      path: '/pois/$id/edit'
      fullPath: '/dashboard/pois/$id/edit'
      preLoaderRoute: typeof AdminDashboardPoisIdEditIndexImport
      parentRoute: typeof AdminDashboardImport
    }
  }
}

// Create and export the route tree

interface SettingsRouteChildren {
  SettingsIndexRoute: typeof SettingsIndexRoute
  SettingsAccountIndexRoute: typeof SettingsAccountIndexRoute
  SettingsProfileIndexRoute: typeof SettingsProfileIndexRoute
}

const SettingsRouteChildren: SettingsRouteChildren = {
  SettingsIndexRoute: SettingsIndexRoute,
  SettingsAccountIndexRoute: SettingsAccountIndexRoute,
  SettingsProfileIndexRoute: SettingsProfileIndexRoute,
}

const SettingsRouteWithChildren = SettingsRoute._addFileChildren(
  SettingsRouteChildren,
)

interface TripsRouteChildren {
  TripsIndexRoute: typeof TripsIndexRoute
  TripsIdIndexRoute: typeof TripsIdIndexRoute
  TripsDiscoverIndexRoute: typeof TripsDiscoverIndexRoute
  TripsInvitesIndexRoute: typeof TripsInvitesIndexRoute
  TripsMyTripsIndexRoute: typeof TripsMyTripsIndexRoute
  TripsPlannerIndexRoute: typeof TripsPlannerIndexRoute
}

const TripsRouteChildren: TripsRouteChildren = {
  TripsIndexRoute: TripsIndexRoute,
  TripsIdIndexRoute: TripsIdIndexRoute,
  TripsDiscoverIndexRoute: TripsDiscoverIndexRoute,
  TripsInvitesIndexRoute: TripsInvitesIndexRoute,
  TripsMyTripsIndexRoute: TripsMyTripsIndexRoute,
  TripsPlannerIndexRoute: TripsPlannerIndexRoute,
}

const TripsRouteWithChildren = TripsRoute._addFileChildren(TripsRouteChildren)

interface AdminDashboardRouteChildren {
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  AdminDashboardAmenitiesIndexRoute: typeof AdminDashboardAmenitiesIndexRoute
  AdminDashboardCategoriesIndexRoute: typeof AdminDashboardCategoriesIndexRoute
  AdminDashboardCitiesIndexRoute: typeof AdminDashboardCitiesIndexRoute
  AdminDashboardPoisIndexRoute: typeof AdminDashboardPoisIndexRoute
  AdminDashboardUsersIndexRoute: typeof AdminDashboardUsersIndexRoute
  AdminDashboardAmenitiesIdIndexRoute: typeof AdminDashboardAmenitiesIdIndexRoute
  AdminDashboardAmenitiesNewIndexRoute: typeof AdminDashboardAmenitiesNewIndexRoute
  AdminDashboardCategoriesIdIndexRoute: typeof AdminDashboardCategoriesIdIndexRoute
  AdminDashboardCategoriesNewIndexRoute: typeof AdminDashboardCategoriesNewIndexRoute
  AdminDashboardCitiesIdIndexRoute: typeof AdminDashboardCitiesIdIndexRoute
  AdminDashboardCitiesNewIndexRoute: typeof AdminDashboardCitiesNewIndexRoute
  AdminDashboardPoisIdIndexRoute: typeof AdminDashboardPoisIdIndexRoute
  AdminDashboardUsersVerifyIndexRoute: typeof AdminDashboardUsersVerifyIndexRoute
  AdminDashboardAmenitiesIdEditIndexRoute: typeof AdminDashboardAmenitiesIdEditIndexRoute
  AdminDashboardCategoriesIdEditIndexRoute: typeof AdminDashboardCategoriesIdEditIndexRoute
  AdminDashboardCitiesIdEditIndexRoute: typeof AdminDashboardCitiesIdEditIndexRoute
  AdminDashboardPoisIdEditIndexRoute: typeof AdminDashboardPoisIdEditIndexRoute
}

const AdminDashboardRouteChildren: AdminDashboardRouteChildren = {
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  AdminDashboardAmenitiesIndexRoute: AdminDashboardAmenitiesIndexRoute,
  AdminDashboardCategoriesIndexRoute: AdminDashboardCategoriesIndexRoute,
  AdminDashboardCitiesIndexRoute: AdminDashboardCitiesIndexRoute,
  AdminDashboardPoisIndexRoute: AdminDashboardPoisIndexRoute,
  AdminDashboardUsersIndexRoute: AdminDashboardUsersIndexRoute,
  AdminDashboardAmenitiesIdIndexRoute: AdminDashboardAmenitiesIdIndexRoute,
  AdminDashboardAmenitiesNewIndexRoute: AdminDashboardAmenitiesNewIndexRoute,
  AdminDashboardCategoriesIdIndexRoute: AdminDashboardCategoriesIdIndexRoute,
  AdminDashboardCategoriesNewIndexRoute: AdminDashboardCategoriesNewIndexRoute,
  AdminDashboardCitiesIdIndexRoute: AdminDashboardCitiesIdIndexRoute,
  AdminDashboardCitiesNewIndexRoute: AdminDashboardCitiesNewIndexRoute,
  AdminDashboardPoisIdIndexRoute: AdminDashboardPoisIdIndexRoute,
  AdminDashboardUsersVerifyIndexRoute: AdminDashboardUsersVerifyIndexRoute,
  AdminDashboardAmenitiesIdEditIndexRoute:
    AdminDashboardAmenitiesIdEditIndexRoute,
  AdminDashboardCategoriesIdEditIndexRoute:
    AdminDashboardCategoriesIdEditIndexRoute,
  AdminDashboardCitiesIdEditIndexRoute: AdminDashboardCitiesIdEditIndexRoute,
  AdminDashboardPoisIdEditIndexRoute: AdminDashboardPoisIdEditIndexRoute,
}

const AdminDashboardRouteWithChildren = AdminDashboardRoute._addFileChildren(
  AdminDashboardRouteChildren,
)

interface UUsernameRouteChildren {
  UUsernameIndexRoute: typeof UUsernameIndexRoute
  UUsernameActivitiesIndexRoute: typeof UUsernameActivitiesIndexRoute
  UUsernameFavoritesIndexRoute: typeof UUsernameFavoritesIndexRoute
  UUsernameFollowersIndexRoute: typeof UUsernameFollowersIndexRoute
  UUsernameFollowingIndexRoute: typeof UUsernameFollowingIndexRoute
  UUsernameListsIndexRoute: typeof UUsernameListsIndexRoute
  UUsernameReviewsIndexRoute: typeof UUsernameReviewsIndexRoute
}

const UUsernameRouteChildren: UUsernameRouteChildren = {
  UUsernameIndexRoute: UUsernameIndexRoute,
  UUsernameActivitiesIndexRoute: UUsernameActivitiesIndexRoute,
  UUsernameFavoritesIndexRoute: UUsernameFavoritesIndexRoute,
  UUsernameFollowersIndexRoute: UUsernameFollowersIndexRoute,
  UUsernameFollowingIndexRoute: UUsernameFollowingIndexRoute,
  UUsernameListsIndexRoute: UUsernameListsIndexRoute,
  UUsernameReviewsIndexRoute: UUsernameReviewsIndexRoute,
}

const UUsernameRouteWithChildren = UUsernameRoute._addFileChildren(
  UUsernameRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/settings': typeof SettingsRouteWithChildren
  '/trips': typeof TripsRouteWithChildren
  '/dashboard': typeof AdminDashboardRouteWithChildren
  '/u/$username': typeof UUsernameRouteWithChildren
  '/bookmarks': typeof BookmarksIndexRoute
  '/categories': typeof CategoriesIndexRoute
  '/diary': typeof DiaryIndexRoute
  '/help': typeof HelpIndexRoute
  '/lists': typeof ListsIndexRoute
  '/nearby': typeof NearbyIndexRoute
  '/notifications': typeof NotificationsIndexRoute
  '/privacy': typeof PrivacyIndexRoute
  '/report': typeof ReportIndexRoute
  '/search': typeof SearchIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/terms': typeof TermsIndexRoute
  '/trips/': typeof TripsIndexRoute
  '/dashboard/': typeof AdminDashboardIndexRoute
  '/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/onboarding': typeof AuthOnboardingIndexRoute
  '/sign-in': typeof AuthSignInIndexRoute
  '/sign-up': typeof AuthSignUpIndexRoute
  '/verify-email': typeof AuthVerifyEmailIndexRoute
  '/cities/$': typeof CitiesSplatIndexRoute
  '/cities/list': typeof CitiesListIndexRoute
  '/discover/events': typeof DiscoverEventsIndexRoute
  '/lists/$id': typeof ListsIdIndexRoute
  '/p/$id': typeof PIdIndexRoute
  '/settings/account': typeof SettingsAccountIndexRoute
  '/settings/profile': typeof SettingsProfileIndexRoute
  '/trips/$id': typeof TripsIdIndexRoute
  '/trips/discover': typeof TripsDiscoverIndexRoute
  '/trips/invites': typeof TripsInvitesIndexRoute
  '/trips/my-trips': typeof TripsMyTripsIndexRoute
  '/trips/planner': typeof TripsPlannerIndexRoute
  '/u/$username/': typeof UUsernameIndexRoute
  '/dashboard/amenities': typeof AdminDashboardAmenitiesIndexRoute
  '/dashboard/categories': typeof AdminDashboardCategoriesIndexRoute
  '/dashboard/cities': typeof AdminDashboardCitiesIndexRoute
  '/dashboard/pois': typeof AdminDashboardPoisIndexRoute
  '/dashboard/users': typeof AdminDashboardUsersIndexRoute
  '/forgot-password/reset': typeof AuthForgotPasswordResetIndexRoute
  '/lists/$id/edit': typeof ListsIdEditIndexRoute
  '/lists/$id/items': typeof ListsIdItemsIndexRoute
  '/u/$username/activities': typeof UUsernameActivitiesIndexRoute
  '/u/$username/favorites': typeof UUsernameFavoritesIndexRoute
  '/u/$username/followers': typeof UUsernameFollowersIndexRoute
  '/u/$username/following': typeof UUsernameFollowingIndexRoute
  '/u/$username/lists': typeof UUsernameListsIndexRoute
  '/u/$username/reviews': typeof UUsernameReviewsIndexRoute
  '/dashboard/amenities/$id': typeof AdminDashboardAmenitiesIdIndexRoute
  '/dashboard/amenities/new': typeof AdminDashboardAmenitiesNewIndexRoute
  '/dashboard/categories/$id': typeof AdminDashboardCategoriesIdIndexRoute
  '/dashboard/categories/new': typeof AdminDashboardCategoriesNewIndexRoute
  '/dashboard/cities/$id': typeof AdminDashboardCitiesIdIndexRoute
  '/dashboard/cities/new': typeof AdminDashboardCitiesNewIndexRoute
  '/dashboard/pois/$id': typeof AdminDashboardPoisIdIndexRoute
  '/dashboard/users/verify': typeof AdminDashboardUsersVerifyIndexRoute
  '/dashboard/amenities/$id/edit': typeof AdminDashboardAmenitiesIdEditIndexRoute
  '/dashboard/categories/$id/edit': typeof AdminDashboardCategoriesIdEditIndexRoute
  '/dashboard/cities/$id/edit': typeof AdminDashboardCitiesIdEditIndexRoute
  '/dashboard/pois/$id/edit': typeof AdminDashboardPoisIdEditIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bookmarks': typeof BookmarksIndexRoute
  '/categories': typeof CategoriesIndexRoute
  '/diary': typeof DiaryIndexRoute
  '/help': typeof HelpIndexRoute
  '/lists': typeof ListsIndexRoute
  '/nearby': typeof NearbyIndexRoute
  '/notifications': typeof NotificationsIndexRoute
  '/privacy': typeof PrivacyIndexRoute
  '/report': typeof ReportIndexRoute
  '/search': typeof SearchIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/terms': typeof TermsIndexRoute
  '/trips': typeof TripsIndexRoute
  '/dashboard': typeof AdminDashboardIndexRoute
  '/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/onboarding': typeof AuthOnboardingIndexRoute
  '/sign-in': typeof AuthSignInIndexRoute
  '/sign-up': typeof AuthSignUpIndexRoute
  '/verify-email': typeof AuthVerifyEmailIndexRoute
  '/cities/$': typeof CitiesSplatIndexRoute
  '/cities/list': typeof CitiesListIndexRoute
  '/discover/events': typeof DiscoverEventsIndexRoute
  '/lists/$id': typeof ListsIdIndexRoute
  '/p/$id': typeof PIdIndexRoute
  '/settings/account': typeof SettingsAccountIndexRoute
  '/settings/profile': typeof SettingsProfileIndexRoute
  '/trips/$id': typeof TripsIdIndexRoute
  '/trips/discover': typeof TripsDiscoverIndexRoute
  '/trips/invites': typeof TripsInvitesIndexRoute
  '/trips/my-trips': typeof TripsMyTripsIndexRoute
  '/trips/planner': typeof TripsPlannerIndexRoute
  '/u/$username': typeof UUsernameIndexRoute
  '/dashboard/amenities': typeof AdminDashboardAmenitiesIndexRoute
  '/dashboard/categories': typeof AdminDashboardCategoriesIndexRoute
  '/dashboard/cities': typeof AdminDashboardCitiesIndexRoute
  '/dashboard/pois': typeof AdminDashboardPoisIndexRoute
  '/dashboard/users': typeof AdminDashboardUsersIndexRoute
  '/forgot-password/reset': typeof AuthForgotPasswordResetIndexRoute
  '/lists/$id/edit': typeof ListsIdEditIndexRoute
  '/lists/$id/items': typeof ListsIdItemsIndexRoute
  '/u/$username/activities': typeof UUsernameActivitiesIndexRoute
  '/u/$username/favorites': typeof UUsernameFavoritesIndexRoute
  '/u/$username/followers': typeof UUsernameFollowersIndexRoute
  '/u/$username/following': typeof UUsernameFollowingIndexRoute
  '/u/$username/lists': typeof UUsernameListsIndexRoute
  '/u/$username/reviews': typeof UUsernameReviewsIndexRoute
  '/dashboard/amenities/$id': typeof AdminDashboardAmenitiesIdIndexRoute
  '/dashboard/amenities/new': typeof AdminDashboardAmenitiesNewIndexRoute
  '/dashboard/categories/$id': typeof AdminDashboardCategoriesIdIndexRoute
  '/dashboard/categories/new': typeof AdminDashboardCategoriesNewIndexRoute
  '/dashboard/cities/$id': typeof AdminDashboardCitiesIdIndexRoute
  '/dashboard/cities/new': typeof AdminDashboardCitiesNewIndexRoute
  '/dashboard/pois/$id': typeof AdminDashboardPoisIdIndexRoute
  '/dashboard/users/verify': typeof AdminDashboardUsersVerifyIndexRoute
  '/dashboard/amenities/$id/edit': typeof AdminDashboardAmenitiesIdEditIndexRoute
  '/dashboard/categories/$id/edit': typeof AdminDashboardCategoriesIdEditIndexRoute
  '/dashboard/cities/$id/edit': typeof AdminDashboardCitiesIdEditIndexRoute
  '/dashboard/pois/$id/edit': typeof AdminDashboardPoisIdEditIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/settings': typeof SettingsRouteWithChildren
  '/trips': typeof TripsRouteWithChildren
  '/_admin/dashboard': typeof AdminDashboardRouteWithChildren
  '/u/$username': typeof UUsernameRouteWithChildren
  '/bookmarks/': typeof BookmarksIndexRoute
  '/categories/': typeof CategoriesIndexRoute
  '/diary/': typeof DiaryIndexRoute
  '/help/': typeof HelpIndexRoute
  '/lists/': typeof ListsIndexRoute
  '/nearby/': typeof NearbyIndexRoute
  '/notifications/': typeof NotificationsIndexRoute
  '/privacy/': typeof PrivacyIndexRoute
  '/report/': typeof ReportIndexRoute
  '/search/': typeof SearchIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/terms/': typeof TermsIndexRoute
  '/trips/': typeof TripsIndexRoute
  '/_admin/dashboard/': typeof AdminDashboardIndexRoute
  '/_auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
  '/_auth/onboarding/': typeof AuthOnboardingIndexRoute
  '/_auth/sign-in/': typeof AuthSignInIndexRoute
  '/_auth/sign-up/': typeof AuthSignUpIndexRoute
  '/_auth/verify-email/': typeof AuthVerifyEmailIndexRoute
  '/cities/$/': typeof CitiesSplatIndexRoute
  '/cities/list/': typeof CitiesListIndexRoute
  '/discover/events/': typeof DiscoverEventsIndexRoute
  '/lists/$id/': typeof ListsIdIndexRoute
  '/p/$id/': typeof PIdIndexRoute
  '/settings/account/': typeof SettingsAccountIndexRoute
  '/settings/profile/': typeof SettingsProfileIndexRoute
  '/trips/$id/': typeof TripsIdIndexRoute
  '/trips/discover/': typeof TripsDiscoverIndexRoute
  '/trips/invites/': typeof TripsInvitesIndexRoute
  '/trips/my-trips/': typeof TripsMyTripsIndexRoute
  '/trips/planner/': typeof TripsPlannerIndexRoute
  '/u/$username/': typeof UUsernameIndexRoute
  '/_admin/dashboard/amenities/': typeof AdminDashboardAmenitiesIndexRoute
  '/_admin/dashboard/categories/': typeof AdminDashboardCategoriesIndexRoute
  '/_admin/dashboard/cities/': typeof AdminDashboardCitiesIndexRoute
  '/_admin/dashboard/pois/': typeof AdminDashboardPoisIndexRoute
  '/_admin/dashboard/users/': typeof AdminDashboardUsersIndexRoute
  '/_auth/forgot-password/reset/': typeof AuthForgotPasswordResetIndexRoute
  '/lists/$id/edit/': typeof ListsIdEditIndexRoute
  '/lists/$id/items/': typeof ListsIdItemsIndexRoute
  '/u/$username/activities/': typeof UUsernameActivitiesIndexRoute
  '/u/$username/favorites/': typeof UUsernameFavoritesIndexRoute
  '/u/$username/followers/': typeof UUsernameFollowersIndexRoute
  '/u/$username/following/': typeof UUsernameFollowingIndexRoute
  '/u/$username/lists/': typeof UUsernameListsIndexRoute
  '/u/$username/reviews/': typeof UUsernameReviewsIndexRoute
  '/_admin/dashboard/amenities/$id/': typeof AdminDashboardAmenitiesIdIndexRoute
  '/_admin/dashboard/amenities/new/': typeof AdminDashboardAmenitiesNewIndexRoute
  '/_admin/dashboard/categories/$id/': typeof AdminDashboardCategoriesIdIndexRoute
  '/_admin/dashboard/categories/new/': typeof AdminDashboardCategoriesNewIndexRoute
  '/_admin/dashboard/cities/$id/': typeof AdminDashboardCitiesIdIndexRoute
  '/_admin/dashboard/cities/new/': typeof AdminDashboardCitiesNewIndexRoute
  '/_admin/dashboard/pois/$id/': typeof AdminDashboardPoisIdIndexRoute
  '/_admin/dashboard/users/verify/': typeof AdminDashboardUsersVerifyIndexRoute
  '/_admin/dashboard/amenities/$id/edit/': typeof AdminDashboardAmenitiesIdEditIndexRoute
  '/_admin/dashboard/categories/$id/edit/': typeof AdminDashboardCategoriesIdEditIndexRoute
  '/_admin/dashboard/cities/$id/edit/': typeof AdminDashboardCitiesIdEditIndexRoute
  '/_admin/dashboard/pois/$id/edit/': typeof AdminDashboardPoisIdEditIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/trips'
    | '/dashboard'
    | '/u/$username'
    | '/bookmarks'
    | '/categories'
    | '/diary'
    | '/help'
    | '/lists'
    | '/nearby'
    | '/notifications'
    | '/privacy'
    | '/report'
    | '/search'
    | '/settings/'
    | '/terms'
    | '/trips/'
    | '/dashboard/'
    | '/forgot-password'
    | '/onboarding'
    | '/sign-in'
    | '/sign-up'
    | '/verify-email'
    | '/cities/$'
    | '/cities/list'
    | '/discover/events'
    | '/lists/$id'
    | '/p/$id'
    | '/settings/account'
    | '/settings/profile'
    | '/trips/$id'
    | '/trips/discover'
    | '/trips/invites'
    | '/trips/my-trips'
    | '/trips/planner'
    | '/u/$username/'
    | '/dashboard/amenities'
    | '/dashboard/categories'
    | '/dashboard/cities'
    | '/dashboard/pois'
    | '/dashboard/users'
    | '/forgot-password/reset'
    | '/lists/$id/edit'
    | '/lists/$id/items'
    | '/u/$username/activities'
    | '/u/$username/favorites'
    | '/u/$username/followers'
    | '/u/$username/following'
    | '/u/$username/lists'
    | '/u/$username/reviews'
    | '/dashboard/amenities/$id'
    | '/dashboard/amenities/new'
    | '/dashboard/categories/$id'
    | '/dashboard/categories/new'
    | '/dashboard/cities/$id'
    | '/dashboard/cities/new'
    | '/dashboard/pois/$id'
    | '/dashboard/users/verify'
    | '/dashboard/amenities/$id/edit'
    | '/dashboard/categories/$id/edit'
    | '/dashboard/cities/$id/edit'
    | '/dashboard/pois/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/bookmarks'
    | '/categories'
    | '/diary'
    | '/help'
    | '/lists'
    | '/nearby'
    | '/notifications'
    | '/privacy'
    | '/report'
    | '/search'
    | '/settings'
    | '/terms'
    | '/trips'
    | '/dashboard'
    | '/forgot-password'
    | '/onboarding'
    | '/sign-in'
    | '/sign-up'
    | '/verify-email'
    | '/cities/$'
    | '/cities/list'
    | '/discover/events'
    | '/lists/$id'
    | '/p/$id'
    | '/settings/account'
    | '/settings/profile'
    | '/trips/$id'
    | '/trips/discover'
    | '/trips/invites'
    | '/trips/my-trips'
    | '/trips/planner'
    | '/u/$username'
    | '/dashboard/amenities'
    | '/dashboard/categories'
    | '/dashboard/cities'
    | '/dashboard/pois'
    | '/dashboard/users'
    | '/forgot-password/reset'
    | '/lists/$id/edit'
    | '/lists/$id/items'
    | '/u/$username/activities'
    | '/u/$username/favorites'
    | '/u/$username/followers'
    | '/u/$username/following'
    | '/u/$username/lists'
    | '/u/$username/reviews'
    | '/dashboard/amenities/$id'
    | '/dashboard/amenities/new'
    | '/dashboard/categories/$id'
    | '/dashboard/categories/new'
    | '/dashboard/cities/$id'
    | '/dashboard/cities/new'
    | '/dashboard/pois/$id'
    | '/dashboard/users/verify'
    | '/dashboard/amenities/$id/edit'
    | '/dashboard/categories/$id/edit'
    | '/dashboard/cities/$id/edit'
    | '/dashboard/pois/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/settings'
    | '/trips'
    | '/_admin/dashboard'
    | '/u/$username'
    | '/bookmarks/'
    | '/categories/'
    | '/diary/'
    | '/help/'
    | '/lists/'
    | '/nearby/'
    | '/notifications/'
    | '/privacy/'
    | '/report/'
    | '/search/'
    | '/settings/'
    | '/terms/'
    | '/trips/'
    | '/_admin/dashboard/'
    | '/_auth/forgot-password/'
    | '/_auth/onboarding/'
    | '/_auth/sign-in/'
    | '/_auth/sign-up/'
    | '/_auth/verify-email/'
    | '/cities/$/'
    | '/cities/list/'
    | '/discover/events/'
    | '/lists/$id/'
    | '/p/$id/'
    | '/settings/account/'
    | '/settings/profile/'
    | '/trips/$id/'
    | '/trips/discover/'
    | '/trips/invites/'
    | '/trips/my-trips/'
    | '/trips/planner/'
    | '/u/$username/'
    | '/_admin/dashboard/amenities/'
    | '/_admin/dashboard/categories/'
    | '/_admin/dashboard/cities/'
    | '/_admin/dashboard/pois/'
    | '/_admin/dashboard/users/'
    | '/_auth/forgot-password/reset/'
    | '/lists/$id/edit/'
    | '/lists/$id/items/'
    | '/u/$username/activities/'
    | '/u/$username/favorites/'
    | '/u/$username/followers/'
    | '/u/$username/following/'
    | '/u/$username/lists/'
    | '/u/$username/reviews/'
    | '/_admin/dashboard/amenities/$id/'
    | '/_admin/dashboard/amenities/new/'
    | '/_admin/dashboard/categories/$id/'
    | '/_admin/dashboard/categories/new/'
    | '/_admin/dashboard/cities/$id/'
    | '/_admin/dashboard/cities/new/'
    | '/_admin/dashboard/pois/$id/'
    | '/_admin/dashboard/users/verify/'
    | '/_admin/dashboard/amenities/$id/edit/'
    | '/_admin/dashboard/categories/$id/edit/'
    | '/_admin/dashboard/cities/$id/edit/'
    | '/_admin/dashboard/pois/$id/edit/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SettingsRoute: typeof SettingsRouteWithChildren
  TripsRoute: typeof TripsRouteWithChildren
  AdminDashboardRoute: typeof AdminDashboardRouteWithChildren
  UUsernameRoute: typeof UUsernameRouteWithChildren
  BookmarksIndexRoute: typeof BookmarksIndexRoute
  CategoriesIndexRoute: typeof CategoriesIndexRoute
  DiaryIndexRoute: typeof DiaryIndexRoute
  HelpIndexRoute: typeof HelpIndexRoute
  ListsIndexRoute: typeof ListsIndexRoute
  NearbyIndexRoute: typeof NearbyIndexRoute
  NotificationsIndexRoute: typeof NotificationsIndexRoute
  PrivacyIndexRoute: typeof PrivacyIndexRoute
  ReportIndexRoute: typeof ReportIndexRoute
  SearchIndexRoute: typeof SearchIndexRoute
  TermsIndexRoute: typeof TermsIndexRoute
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
  AuthOnboardingIndexRoute: typeof AuthOnboardingIndexRoute
  AuthSignInIndexRoute: typeof AuthSignInIndexRoute
  AuthSignUpIndexRoute: typeof AuthSignUpIndexRoute
  AuthVerifyEmailIndexRoute: typeof AuthVerifyEmailIndexRoute
  CitiesSplatIndexRoute: typeof CitiesSplatIndexRoute
  CitiesListIndexRoute: typeof CitiesListIndexRoute
  DiscoverEventsIndexRoute: typeof DiscoverEventsIndexRoute
  ListsIdIndexRoute: typeof ListsIdIndexRoute
  PIdIndexRoute: typeof PIdIndexRoute
  AuthForgotPasswordResetIndexRoute: typeof AuthForgotPasswordResetIndexRoute
  ListsIdEditIndexRoute: typeof ListsIdEditIndexRoute
  ListsIdItemsIndexRoute: typeof ListsIdItemsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SettingsRoute: SettingsRouteWithChildren,
  TripsRoute: TripsRouteWithChildren,
  AdminDashboardRoute: AdminDashboardRouteWithChildren,
  UUsernameRoute: UUsernameRouteWithChildren,
  BookmarksIndexRoute: BookmarksIndexRoute,
  CategoriesIndexRoute: CategoriesIndexRoute,
  DiaryIndexRoute: DiaryIndexRoute,
  HelpIndexRoute: HelpIndexRoute,
  ListsIndexRoute: ListsIndexRoute,
  NearbyIndexRoute: NearbyIndexRoute,
  NotificationsIndexRoute: NotificationsIndexRoute,
  PrivacyIndexRoute: PrivacyIndexRoute,
  ReportIndexRoute: ReportIndexRoute,
  SearchIndexRoute: SearchIndexRoute,
  TermsIndexRoute: TermsIndexRoute,
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
  AuthOnboardingIndexRoute: AuthOnboardingIndexRoute,
  AuthSignInIndexRoute: AuthSignInIndexRoute,
  AuthSignUpIndexRoute: AuthSignUpIndexRoute,
  AuthVerifyEmailIndexRoute: AuthVerifyEmailIndexRoute,
  CitiesSplatIndexRoute: CitiesSplatIndexRoute,
  CitiesListIndexRoute: CitiesListIndexRoute,
  DiscoverEventsIndexRoute: DiscoverEventsIndexRoute,
  ListsIdIndexRoute: ListsIdIndexRoute,
  PIdIndexRoute: PIdIndexRoute,
  AuthForgotPasswordResetIndexRoute: AuthForgotPasswordResetIndexRoute,
  ListsIdEditIndexRoute: ListsIdEditIndexRoute,
  ListsIdItemsIndexRoute: ListsIdItemsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/settings",
        "/trips",
        "/_admin/dashboard",
        "/u/$username",
        "/bookmarks/",
        "/categories/",
        "/diary/",
        "/help/",
        "/lists/",
        "/nearby/",
        "/notifications/",
        "/privacy/",
        "/report/",
        "/search/",
        "/terms/",
        "/_auth/forgot-password/",
        "/_auth/onboarding/",
        "/_auth/sign-in/",
        "/_auth/sign-up/",
        "/_auth/verify-email/",
        "/cities/$/",
        "/cities/list/",
        "/discover/events/",
        "/lists/$id/",
        "/p/$id/",
        "/_auth/forgot-password/reset/",
        "/lists/$id/edit/",
        "/lists/$id/items/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx",
      "children": [
        "/settings/",
        "/settings/account/",
        "/settings/profile/"
      ]
    },
    "/trips": {
      "filePath": "trips.tsx",
      "children": [
        "/trips/",
        "/trips/$id/",
        "/trips/discover/",
        "/trips/invites/",
        "/trips/my-trips/",
        "/trips/planner/"
      ]
    },
    "/_admin/dashboard": {
      "filePath": "_admin/dashboard.tsx",
      "children": [
        "/_admin/dashboard/",
        "/_admin/dashboard/amenities/",
        "/_admin/dashboard/categories/",
        "/_admin/dashboard/cities/",
        "/_admin/dashboard/pois/",
        "/_admin/dashboard/users/",
        "/_admin/dashboard/amenities/$id/",
        "/_admin/dashboard/amenities/new/",
        "/_admin/dashboard/categories/$id/",
        "/_admin/dashboard/categories/new/",
        "/_admin/dashboard/cities/$id/",
        "/_admin/dashboard/cities/new/",
        "/_admin/dashboard/pois/$id/",
        "/_admin/dashboard/users/verify/",
        "/_admin/dashboard/amenities/$id/edit/",
        "/_admin/dashboard/categories/$id/edit/",
        "/_admin/dashboard/cities/$id/edit/",
        "/_admin/dashboard/pois/$id/edit/"
      ]
    },
    "/u/$username": {
      "filePath": "u/$username.tsx",
      "children": [
        "/u/$username/",
        "/u/$username/activities/",
        "/u/$username/favorites/",
        "/u/$username/followers/",
        "/u/$username/following/",
        "/u/$username/lists/",
        "/u/$username/reviews/"
      ]
    },
    "/bookmarks/": {
      "filePath": "bookmarks/index.tsx"
    },
    "/categories/": {
      "filePath": "categories/index.tsx"
    },
    "/diary/": {
      "filePath": "diary/index.tsx"
    },
    "/help/": {
      "filePath": "help/index.tsx"
    },
    "/lists/": {
      "filePath": "lists/index.tsx"
    },
    "/nearby/": {
      "filePath": "nearby/index.tsx"
    },
    "/notifications/": {
      "filePath": "notifications/index.tsx"
    },
    "/privacy/": {
      "filePath": "privacy/index.tsx"
    },
    "/report/": {
      "filePath": "report/index.tsx"
    },
    "/search/": {
      "filePath": "search/index.tsx"
    },
    "/settings/": {
      "filePath": "settings/index.tsx",
      "parent": "/settings"
    },
    "/terms/": {
      "filePath": "terms/index.tsx"
    },
    "/trips/": {
      "filePath": "trips/index.tsx",
      "parent": "/trips"
    },
    "/_admin/dashboard/": {
      "filePath": "_admin/dashboard/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_auth/forgot-password/": {
      "filePath": "_auth/forgot-password/index.tsx"
    },
    "/_auth/onboarding/": {
      "filePath": "_auth/onboarding/index.tsx"
    },
    "/_auth/sign-in/": {
      "filePath": "_auth/sign-in/index.tsx"
    },
    "/_auth/sign-up/": {
      "filePath": "_auth/sign-up/index.tsx"
    },
    "/_auth/verify-email/": {
      "filePath": "_auth/verify-email/index.tsx"
    },
    "/cities/$/": {
      "filePath": "cities/$/index.tsx"
    },
    "/cities/list/": {
      "filePath": "cities/list/index.tsx"
    },
    "/discover/events/": {
      "filePath": "discover/events/index.tsx"
    },
    "/lists/$id/": {
      "filePath": "lists/$id/index.tsx"
    },
    "/p/$id/": {
      "filePath": "p/$id/index.tsx"
    },
    "/settings/account/": {
      "filePath": "settings/account/index.tsx",
      "parent": "/settings"
    },
    "/settings/profile/": {
      "filePath": "settings/profile/index.tsx",
      "parent": "/settings"
    },
    "/trips/$id/": {
      "filePath": "trips/$id/index.tsx",
      "parent": "/trips"
    },
    "/trips/discover/": {
      "filePath": "trips/discover/index.tsx",
      "parent": "/trips"
    },
    "/trips/invites/": {
      "filePath": "trips/invites/index.tsx",
      "parent": "/trips"
    },
    "/trips/my-trips/": {
      "filePath": "trips/my-trips/index.tsx",
      "parent": "/trips"
    },
    "/trips/planner/": {
      "filePath": "trips/planner/index.tsx",
      "parent": "/trips"
    },
    "/u/$username/": {
      "filePath": "u/$username/index.tsx",
      "parent": "/u/$username"
    },
    "/_admin/dashboard/amenities/": {
      "filePath": "_admin/dashboard/amenities/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/categories/": {
      "filePath": "_admin/dashboard/categories/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/cities/": {
      "filePath": "_admin/dashboard/cities/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/pois/": {
      "filePath": "_admin/dashboard/pois/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/users/": {
      "filePath": "_admin/dashboard/users/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_auth/forgot-password/reset/": {
      "filePath": "_auth/forgot-password/reset/index.tsx"
    },
    "/lists/$id/edit/": {
      "filePath": "lists/$id/edit/index.tsx"
    },
    "/lists/$id/items/": {
      "filePath": "lists/$id/items/index.tsx"
    },
    "/u/$username/activities/": {
      "filePath": "u/$username/activities/index.tsx",
      "parent": "/u/$username"
    },
    "/u/$username/favorites/": {
      "filePath": "u/$username/favorites/index.tsx",
      "parent": "/u/$username"
    },
    "/u/$username/followers/": {
      "filePath": "u/$username/followers/index.tsx",
      "parent": "/u/$username"
    },
    "/u/$username/following/": {
      "filePath": "u/$username/following/index.tsx",
      "parent": "/u/$username"
    },
    "/u/$username/lists/": {
      "filePath": "u/$username/lists/index.tsx",
      "parent": "/u/$username"
    },
    "/u/$username/reviews/": {
      "filePath": "u/$username/reviews/index.tsx",
      "parent": "/u/$username"
    },
    "/_admin/dashboard/amenities/$id/": {
      "filePath": "_admin/dashboard/amenities/$id/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/amenities/new/": {
      "filePath": "_admin/dashboard/amenities/new/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/categories/$id/": {
      "filePath": "_admin/dashboard/categories/$id/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/categories/new/": {
      "filePath": "_admin/dashboard/categories/new/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/cities/$id/": {
      "filePath": "_admin/dashboard/cities/$id/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/cities/new/": {
      "filePath": "_admin/dashboard/cities/new/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/pois/$id/": {
      "filePath": "_admin/dashboard/pois/$id/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/users/verify/": {
      "filePath": "_admin/dashboard/users/verify/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/amenities/$id/edit/": {
      "filePath": "_admin/dashboard/amenities/$id/edit/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/categories/$id/edit/": {
      "filePath": "_admin/dashboard/categories/$id/edit/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/cities/$id/edit/": {
      "filePath": "_admin/dashboard/cities/$id/edit/index.tsx",
      "parent": "/_admin/dashboard"
    },
    "/_admin/dashboard/pois/$id/edit/": {
      "filePath": "_admin/dashboard/pois/$id/edit/index.tsx",
      "parent": "/_admin/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
