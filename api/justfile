default:
	just --list

all: build

@build:
	echo "=> Building..."
	go build -o main ./main.go
	echo "=> Build completed"

# Setup the project
@setup:
	chmod u+x ./scripts/setup.sh && ./scripts/setup.sh

# Clean the binary
@clean:
	echo "=> Removing binary..."
	rm -f main
	echo "=> Removed binary"

# Live reload
@watch:
	air -c conf/.air.toml

# Up the Docker containers
@docker:
	docker compose up -d

# Run fake data generation script
@fake:
	go run . fake

# Synchronize search index with the primary database
@search:
	go run . search-sync

# Generate Go code from SQL schema
@sqlc:
	sqlc generate -f ./conf/sqlc.yaml

# Create example .env file
@env-example:
	chmod u+x ./scripts/infisical.sh && ./scripts/infisical.sh env-example

# Pull secrets from Infisical and export secrets to .env file
@env-pull:
	chmod u+x ./scripts/infisical.sh && ./scripts/infisical.sh env-pull

# Push secrets from .env file to Infisical
@env-push:
	chmod u+x ./scripts/infisical.sh && ./scripts/infisical.sh env-push

# Fake data generation database id selection helper
@fake-id:
	chmod u+x ./scripts/fake-id.sh && ./scripts/fake-id.sh

@test-e2e-run:
	cd tests && go test -v

@test-e2e-setup:
	docker compose -f ./docker-compose.test.yml --env-file .env.test up -d
	goose up
	air -c conf/.air.toml -- --env-file=.env.test

@test-e2e-teardown:
	docker compose down
	